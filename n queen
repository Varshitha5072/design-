def is_safe(board,row,col,n):
    for i in range(row):
        if board[i][col]=='Q':
            return False
    i=row
    j=col
    while i>=0 and j>=0:
        if board[i][j]=='Q':
            return False
        i-=1
        j-=1
    i=row
    j=col
    while i>=0 and j<n:
        if board[i][j]=='Q':
            return False
        i-=1
        j+=1
    return True
def solve_n_queens(n):
    board=[['.' for _ in range(n)]for _ in range(n)]
    def backtrack(row):
        if row==n:
            for i in range(n):
                print(' '.join(board[i]))
            print()
            return
        for col in range(n):
            if is_safe(board,row,col,n):
                board[row][col]='Q'
                backtrack(row + 1)
                board[row][col]='.'
    backtrack(0)
n=int(input("Enter no of queens: "))
solve_n_queens(n)
