def is_safe(graph, v, colour, c):
    for i in range(len(graph)):
        if graph[v][i] == 1 and colour[i] == c:
            return False
    return True
def graph_coloring(graph, m, colour, v):
    if v == len(graph):
        return True
    for c in range(1, m + 1):
        if is_safe(graph, v, colour, c):
            colour[v] = c
            if graph_coloring(graph, m, colour, v + 1):
                return True
            colour[v] = 0
    return False
def solve_graph_coloring(graph, m):
    colour = [0] * len(graph)
    if not graph_coloring(graph, m, colour, 0):
        print("Solution does not exist")
        return
    print("Solution exists:")
    for v in range(len(graph)):
        print("Vertex", v, "is coloured with", colour[v])
graph = [[0, 1, 1, 1],
         [1, 0, 1, 0],
         [1, 1, 0, 1],
         [1, 0, 1, 0]]
m = int(input("enter no of colours:"))
solve_graph_coloring(graph, m)
